/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardYieldsImport } from './routes/dashboard/yields'
import { Route as DashboardTransactionsImport } from './routes/dashboard/transactions'
import { Route as DashboardSupportedchainsImport } from './routes/dashboard/supported_chains'
import { Route as DashboardSendImport } from './routes/dashboard/send'
import { Route as DashboardNotificationsImport } from './routes/dashboard/notifications'
import { Route as DashboardNotificationsIndexImport } from './routes/dashboard/notifications/index'
import { Route as DashboardNotificationsCreateImport } from './routes/dashboard/notifications/create'
import { Route as DashboardChainsChainIdImport } from './routes/dashboard/chains/$chainId'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardYieldsRoute = DashboardYieldsImport.update({
  id: '/yields',
  path: '/yields',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardTransactionsRoute = DashboardTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSupportedchainsRoute = DashboardSupportedchainsImport.update({
  id: '/supported_chains',
  path: '/supported_chains',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSendRoute = DashboardSendImport.update({
  id: '/send',
  path: '/send',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardNotificationsRoute = DashboardNotificationsImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardNotificationsIndexRoute =
  DashboardNotificationsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardNotificationsRoute,
  } as any)

const DashboardNotificationsCreateRoute =
  DashboardNotificationsCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => DashboardNotificationsRoute,
  } as any)

const DashboardChainsChainIdRoute = DashboardChainsChainIdImport.update({
  id: '/chains/$chainId',
  path: '/chains/$chainId',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/notifications': {
      id: '/dashboard/notifications'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof DashboardNotificationsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/send': {
      id: '/dashboard/send'
      path: '/send'
      fullPath: '/dashboard/send'
      preLoaderRoute: typeof DashboardSendImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/supported_chains': {
      id: '/dashboard/supported_chains'
      path: '/supported_chains'
      fullPath: '/dashboard/supported_chains'
      preLoaderRoute: typeof DashboardSupportedchainsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/transactions': {
      id: '/dashboard/transactions'
      path: '/transactions'
      fullPath: '/dashboard/transactions'
      preLoaderRoute: typeof DashboardTransactionsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/yields': {
      id: '/dashboard/yields'
      path: '/yields'
      fullPath: '/dashboard/yields'
      preLoaderRoute: typeof DashboardYieldsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/chains/$chainId': {
      id: '/dashboard/chains/$chainId'
      path: '/chains/$chainId'
      fullPath: '/dashboard/chains/$chainId'
      preLoaderRoute: typeof DashboardChainsChainIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/notifications/create': {
      id: '/dashboard/notifications/create'
      path: '/create'
      fullPath: '/dashboard/notifications/create'
      preLoaderRoute: typeof DashboardNotificationsCreateImport
      parentRoute: typeof DashboardNotificationsImport
    }
    '/dashboard/notifications/': {
      id: '/dashboard/notifications/'
      path: '/'
      fullPath: '/dashboard/notifications/'
      preLoaderRoute: typeof DashboardNotificationsIndexImport
      parentRoute: typeof DashboardNotificationsImport
    }
  }
}

// Create and export the route tree

interface DashboardNotificationsRouteChildren {
  DashboardNotificationsCreateRoute: typeof DashboardNotificationsCreateRoute
  DashboardNotificationsIndexRoute: typeof DashboardNotificationsIndexRoute
}

const DashboardNotificationsRouteChildren: DashboardNotificationsRouteChildren =
  {
    DashboardNotificationsCreateRoute: DashboardNotificationsCreateRoute,
    DashboardNotificationsIndexRoute: DashboardNotificationsIndexRoute,
  }

const DashboardNotificationsRouteWithChildren =
  DashboardNotificationsRoute._addFileChildren(
    DashboardNotificationsRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardNotificationsRoute: typeof DashboardNotificationsRouteWithChildren
  DashboardSendRoute: typeof DashboardSendRoute
  DashboardSupportedchainsRoute: typeof DashboardSupportedchainsRoute
  DashboardTransactionsRoute: typeof DashboardTransactionsRoute
  DashboardYieldsRoute: typeof DashboardYieldsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardChainsChainIdRoute: typeof DashboardChainsChainIdRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardNotificationsRoute: DashboardNotificationsRouteWithChildren,
  DashboardSendRoute: DashboardSendRoute,
  DashboardSupportedchainsRoute: DashboardSupportedchainsRoute,
  DashboardTransactionsRoute: DashboardTransactionsRoute,
  DashboardYieldsRoute: DashboardYieldsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardChainsChainIdRoute: DashboardChainsChainIdRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/notifications': typeof DashboardNotificationsRouteWithChildren
  '/dashboard/send': typeof DashboardSendRoute
  '/dashboard/supported_chains': typeof DashboardSupportedchainsRoute
  '/dashboard/transactions': typeof DashboardTransactionsRoute
  '/dashboard/yields': typeof DashboardYieldsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/chains/$chainId': typeof DashboardChainsChainIdRoute
  '/dashboard/notifications/create': typeof DashboardNotificationsCreateRoute
  '/dashboard/notifications/': typeof DashboardNotificationsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard/send': typeof DashboardSendRoute
  '/dashboard/supported_chains': typeof DashboardSupportedchainsRoute
  '/dashboard/transactions': typeof DashboardTransactionsRoute
  '/dashboard/yields': typeof DashboardYieldsRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/chains/$chainId': typeof DashboardChainsChainIdRoute
  '/dashboard/notifications/create': typeof DashboardNotificationsCreateRoute
  '/dashboard/notifications': typeof DashboardNotificationsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/notifications': typeof DashboardNotificationsRouteWithChildren
  '/dashboard/send': typeof DashboardSendRoute
  '/dashboard/supported_chains': typeof DashboardSupportedchainsRoute
  '/dashboard/transactions': typeof DashboardTransactionsRoute
  '/dashboard/yields': typeof DashboardYieldsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/chains/$chainId': typeof DashboardChainsChainIdRoute
  '/dashboard/notifications/create': typeof DashboardNotificationsCreateRoute
  '/dashboard/notifications/': typeof DashboardNotificationsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/notifications'
    | '/dashboard/send'
    | '/dashboard/supported_chains'
    | '/dashboard/transactions'
    | '/dashboard/yields'
    | '/dashboard/'
    | '/dashboard/chains/$chainId'
    | '/dashboard/notifications/create'
    | '/dashboard/notifications/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/dashboard/send'
    | '/dashboard/supported_chains'
    | '/dashboard/transactions'
    | '/dashboard/yields'
    | '/dashboard'
    | '/dashboard/chains/$chainId'
    | '/dashboard/notifications/create'
    | '/dashboard/notifications'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/notifications'
    | '/dashboard/send'
    | '/dashboard/supported_chains'
    | '/dashboard/transactions'
    | '/dashboard/yields'
    | '/dashboard/'
    | '/dashboard/chains/$chainId'
    | '/dashboard/notifications/create'
    | '/dashboard/notifications/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/notifications",
        "/dashboard/send",
        "/dashboard/supported_chains",
        "/dashboard/transactions",
        "/dashboard/yields",
        "/dashboard/",
        "/dashboard/chains/$chainId"
      ]
    },
    "/dashboard/notifications": {
      "filePath": "dashboard/notifications.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/notifications/create",
        "/dashboard/notifications/"
      ]
    },
    "/dashboard/send": {
      "filePath": "dashboard/send.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/supported_chains": {
      "filePath": "dashboard/supported_chains.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/transactions": {
      "filePath": "dashboard/transactions.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/yields": {
      "filePath": "dashboard/yields.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/chains/$chainId": {
      "filePath": "dashboard/chains/$chainId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/notifications/create": {
      "filePath": "dashboard/notifications/create.tsx",
      "parent": "/dashboard/notifications"
    },
    "/dashboard/notifications/": {
      "filePath": "dashboard/notifications/index.tsx",
      "parent": "/dashboard/notifications"
    }
  }
}
ROUTE_MANIFEST_END */
